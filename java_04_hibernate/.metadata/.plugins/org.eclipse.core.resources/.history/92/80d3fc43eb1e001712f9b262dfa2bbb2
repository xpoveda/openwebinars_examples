package com.openwebinars.hibernate.herencia;

import java.util.Random;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

/**
 * Herencia con Single Table www.openwebinars.net
 * 
 * @LuisMLopezMag
 */
public class App {

	static EntityManagerFactory emf;

	static EntityManager em;

	public static void main(String[] args) {

		// Configuramos el EMF a través de la unidad de persistencia
		emf = Persistence.createEntityManagerFactory("SingleTable");

		// Generamos un EntityManager
		em = emf.createEntityManager();

		// Cerramos el EntityManager
		em.close();

	}

	public void initData() {
		// Iniciamos una transacción
		em.getTransaction().begin();
		
		
		String[] names  = {"Alberto", "Cecilio", "Luis", "Miguel", "Ángel", "Rafael", "Raúl", "Justo", "José", "Antonio"}; 
		
		Random r = new Random();
		
		
		for(int i=0; i < r.nextInt(10); i++) {
			Cuenta cuenta = new Cuenta();
		}
		
		

		CuentaCredito cuentaCredito = new CuentaCredito();
		cuentaCredito.setTitular("Luismi");
		cuentaCredito.setBalance(500.0);
		cuentaCredito.setTipoInteres(0.20);
		cuentaCredito.setLimiteCredito(600.0);

		CuentaDebito cuentaDebito = new CuentaDebito();
		cuentaDebito.setTitular("Luismi");
		cuentaDebito.setBalance(200.0);
		cuentaCredito.setTipoInteres(0.10);
		cuentaDebito.setCargoPorDescubierto(6.5);

		em.persist(cuentaCredito);
		em.persist(cuentaDebito);

		// Commiteamos la transacción
		em.getTransaction().commit();
	}

}
